*** Daemon thread или Демоны потоки ***

Демон в широком значении – фоновая программа. В Java потоки-демоны имеют схожий смысл:
это потоки для фоновых действий по обслуживанию основных потоков. Потоки не-демоны
называются пользовательскими (user thread).

Тред создается демоном, если его родитель демон. Свойство Java-треда isDaemon можно
переключать в любой момент до старта потока. По сравнению с пользовательскими потоками
демоны имеют меньший приоритет выполнения.

Когда все пользовательские треды завершились, JVM завершает работу. Демоны не выполняют
самостоятельных задач, поэтому не препятствуют остановке, программа завершается не
дожидаясь окончания их работы.

Daemon thread может быть полезен для таких действий, как инвалидация кэша, периодическая
актуализация значений из внешних источников, освобождение неиспользуемых пользовательских
ресурсов. Потоки демоны в Java подобны поставщикам услуг для других потоков или объектов,
работающих в том же процессе, что и поток демона. Потоки демоны используются для фоновых
задач поддержки и нужны только во время выполнения обычных потоков.

Обычные потоки и потоки демоны отличаются тем, что происходит при выходе из программы.
Когда JVM останавливает основные, пользовательские потоки, все оставшиеся потоки демоны
прекращают свою работу: в конце концов блоки не выполняются, стеки не разматываются — JVM
просто завершается.

По этой причине потоки демоны следует использовать с осторожностью, и их опасно использовать
для задач, которые могут выполнять любые операции ввода-вывода (ошибка передачи и приема данных).

Методы потоков демонов:
- setDaemon (true / false) - метод используется, чтобы указать, что поток является потоком демоном.
- public boolean isDaemon () - метод используется для определения того, является ли поток потоком
                               демоном или нет.

Поток демон в Java — это поток, который работает в фоновом режиме и в основном создается JVM для
выполнения фоновых задач, таких как сборка мусора и другие домашние задачи.

Примечание:
- Любой поток, созданный основным потоком, который выполняет основной метод в Java, по умолчанию
не является демоном. Поскольку поток наследует свою природу демона от потока, который его создает,
т.е. родительский поток. А поскольку основной поток является потоком, не являющимся демоном, любой
другой поток, созданный из него, будет оставаться не-демоном до тех пор, пока он явно не станет
демоном, вызвав setDaemon(true) ,
- Thread.setDaemon(true) создает демон Thread, но его можно вызвать только перед запуском Thread в Java.
Он выдаст исключение IllegalThreadStateException, если соответствующий поток уже запущен и работает.

