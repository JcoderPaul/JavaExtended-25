Race condition и data race — две разные проблемы многопоточности, которые часто путают.

-----------------------------------------------------------------------------------------------------------
**** Race condition ****
Существует много формулировок определения:
- Race condition представляет собой класс проблем, в которых корректное поведение системы
  зависит от двух независимых событий, происходящих в правильном порядке, однако отсутствует
  механизм, для того чтобы гарантировать фактическое возникновение этих событий.

- Race condition — ошибка проектирования многопоточной системы или приложения, при которой
  работа системы или приложения зависит от того, в каком порядке выполняются части кода.

- Race condition — это нежелательная ситуация, которая возникает, когда устройство или система
  пытается выполнить две или более операций одновременно, но из-за природы устройства или системы,
  операции должны выполняться в правильной последовательности, чтобы быть выполненными правильно.

- Race condition — это недостаток, связанный с синхронизацией или упорядочением событий, что приводит
  к ошибочному поведению программы.

- Race condition - 'состояние гонки' возникает, когда один и тот же ресурс используется несколькими
  потоками одновременно, и в зависимости от порядка действий каждого потока может быть несколько
  возможных результатов.

И наконец наиболее короткое и простое:

- Race condition — это недостаток, возникающий, когда время или порядок событий влияют на
  правильность выполнения программы.

Проблемы с доступом к общим ресурсам проще обнаружить автоматически и решаются они обычно с
помощью синхронизации.
-----------------------------------------------------------------------------------------------------------

**** Data Race ****
Data race - это состояние когда разные потоки обращаются к одной ячейке памяти без какой-либо
синхронизации и как минимум один из потоков осуществляет запись.

Data race - 'Гонка данных' возникает, когда два или более потока пытаются получить доступ к одной
и той же не финальной переменной без синхронизации. Отсутствие синхронизации может привести к внесению
изменений, которые не будут видны другим потокам, из-за этого возможно чтение устаревших данных, что,
в свою очередь, приводит к бесконечным циклам, поврежденным структурам данных или неточным вычислениям.

Решив Data Race через синхронизацию доступа к памяти (блокировки) не всегда решается race condition
и logical correctness.